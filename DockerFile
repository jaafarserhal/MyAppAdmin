# Step 1: Build React App
FROM node:16 AS react-build
WORKDIR /app
COPY MyApp.Web.Api/ClientApp/package.json MyApp.Web.Api/ClientApp/package-lock.json ./ClientApp/
RUN npm install
COPY MyApp.Web.Api/ClientApp/. ./ClientApp/
RUN npm run build --prefix ./ClientApp

# Step 2: Build .NET API (ASP.NET Core) with .NET 8.0 SDK
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

# Step 3: Restore dependencies and build the .NET application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY MyApp.Web.Api/MyApp.Web.Api.csproj MyApp.Web.Api/
COPY MyApp.Core/MyApp.Core.csproj MyApp.Core/
RUN dotnet restore MyApp.Web.Api/MyApp.Web.Api.csproj
COPY . . 
WORKDIR /src/MyApp.Web.Api
RUN dotnet build MyApp.Web.Api.csproj -c Release -o /app/build

# Step 4: Publish the .NET application
FROM build AS publish
RUN dotnet publish MyApp.Web.Api.csproj -c Release -o /app/publishaa

# Step 5: Final Stage - Combine React and .NET API
FROM base AS final
WORKDIR /app
# Copy the React build output to the wwwroot folder in the .NET API
COPY --from=react-build /app/ClientApp/build /app/wwwroot
# Copy the published .NET application files
COPY --from=publish /app/publish /app
ENTRYPOINT ["dotnet", "MyApp.Web.Api.dll"]
